"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchTask = exports.BatchJob = exports.BatchStatus = exports.CollectionType = exports.TokenLinkStatus = exports.NFTSpamTokenOwnership = exports.InputFieldMetadataTypes = exports.ContractInitializationPhase = exports.ContractTemplateType = exports.NFTOwnershipWalletType = exports.NFTOwnershipStatus = exports.OrderValues = exports.GetOwnedAssetsSortValues = exports.GetOwnedCollectionsSortValues = exports.GetOwnedNFTsSortValues = exports.GetNFTsSortValues = exports.TimePeriod = exports.ExchangeReply = exports.SettleResponseCode = exports.TransferTicketTermStatus = exports.TransferTicketStatus = exports.Web3ConnectionMethod = exports.Web3ConnectionType = exports.TransactionOperation = exports.VirtualType = exports.PeerType = exports.TransactionStatus = exports.TransactionOrder = exports.NetworkDestType = exports.NetworkScheme = exports.FeeLevel = exports.Web3ConnectionFeeLevel = exports.ScreeningSupportedProviders = exports.ScreeningVerdict = exports.ScreeningTransactionStatus = exports.TransactionDirection = exports.PolicyApprovalStatus = exports.ScreeningAction = exports.TravelRuleAddressTypeCode = exports.SigningAlgorithm = exports.VaultAssetActivationStatus = exports.BlockchainScope = exports.BlockchainExplorer = exports.BlockchainMedia = exports.BlockchainSigningAlgo = exports.AssetDetailsScope = exports.AssetScope = exports.AssetClass = exports.AssetDetailsClass = exports.VirtualAffiliation = void 0;
exports.TAP = exports.NCW = exports.SmartTransferTicketTermStatus = exports.SmartTransfersTicketStatus = exports.SmartTransfersTicketDirection = void 0;
var VirtualAffiliation;
(function (VirtualAffiliation) {
    VirtualAffiliation["OFF_EXCHANGE"] = "OFF_EXCHANGE";
    VirtualAffiliation["DEFAULT"] = "DEFAULT";
})(VirtualAffiliation || (exports.VirtualAffiliation = VirtualAffiliation = {}));
var AssetDetailsClass;
(function (AssetDetailsClass) {
    AssetDetailsClass["NATIVE"] = "NATIVE";
    AssetDetailsClass["FT"] = "FT";
    AssetDetailsClass["FIAT"] = "FIAT";
    AssetDetailsClass["NFT"] = "NFT";
    AssetDetailsClass["SFT"] = "SFT";
})(AssetDetailsClass || (exports.AssetDetailsClass = AssetDetailsClass = {}));
var AssetClass;
(function (AssetClass) {
    AssetClass["NATIVE"] = "NATIVE";
    AssetClass["FT"] = "FT";
    AssetClass["NFT"] = "NFT";
    AssetClass["SFT"] = "SFT";
})(AssetClass || (exports.AssetClass = AssetClass = {}));
var AssetScope;
(function (AssetScope) {
    AssetScope["GLOBAL"] = "Global";
    AssetScope["LOCAL"] = "Local";
})(AssetScope || (exports.AssetScope = AssetScope = {}));
var AssetDetailsScope;
(function (AssetDetailsScope) {
    AssetDetailsScope["GLOBAL"] = "GLOBAL";
    AssetDetailsScope["LOCAL"] = "LOCAL";
})(AssetDetailsScope || (exports.AssetDetailsScope = AssetDetailsScope = {}));
var BlockchainSigningAlgo;
(function (BlockchainSigningAlgo) {
    BlockchainSigningAlgo["ECDSA_SECP256K1"] = "ECDSA_SECP256K1";
    BlockchainSigningAlgo["EDDSA_ED25519"] = "EDDSA_ED25519";
})(BlockchainSigningAlgo || (exports.BlockchainSigningAlgo = BlockchainSigningAlgo = {}));
class BlockchainMedia {
}
exports.BlockchainMedia = BlockchainMedia;
class BlockchainExplorer {
}
exports.BlockchainExplorer = BlockchainExplorer;
var BlockchainScope;
(function (BlockchainScope) {
    BlockchainScope["GLOBAL"] = "GLOBAL";
    BlockchainScope["LOCAL"] = "LOCAL";
})(BlockchainScope || (exports.BlockchainScope = BlockchainScope = {}));
var VaultAssetActivationStatus;
(function (VaultAssetActivationStatus) {
    VaultAssetActivationStatus["PENDING_ACTIVATION"] = "PENDING_ACTIVATION";
    VaultAssetActivationStatus["ACTIVATION_FAILED"] = "ACTIVATION_FAILED";
    VaultAssetActivationStatus["READY"] = "READY";
})(VaultAssetActivationStatus || (exports.VaultAssetActivationStatus = VaultAssetActivationStatus = {}));
var SigningAlgorithm;
(function (SigningAlgorithm) {
    SigningAlgorithm["MPC_ECDSA_SECP256K1"] = "MPC_ECDSA_SECP256K1";
    SigningAlgorithm["MPC_ECDSA_SECP256R1"] = "MPC_ECDSA_SECP256R1";
    SigningAlgorithm["MPC_EDDSA_ED25519"] = "MPC_EDDSA_ED25519";
})(SigningAlgorithm || (exports.SigningAlgorithm = SigningAlgorithm = {}));
var TravelRuleAddressTypeCode;
(function (TravelRuleAddressTypeCode) {
    TravelRuleAddressTypeCode["HOME"] = "HOME";
    TravelRuleAddressTypeCode["BIZZ"] = "BIZZ";
    TravelRuleAddressTypeCode["GEOG"] = "GEOG";
})(TravelRuleAddressTypeCode || (exports.TravelRuleAddressTypeCode = TravelRuleAddressTypeCode = {}));
var ScreeningAction;
(function (ScreeningAction) {
    ScreeningAction["screen"] = "SCREEN";
    ScreeningAction["pass"] = "PASS";
    ScreeningAction["freeze"] = "FREEZE";
})(ScreeningAction || (exports.ScreeningAction = ScreeningAction = {}));
var PolicyApprovalStatus;
(function (PolicyApprovalStatus) {
    PolicyApprovalStatus["live"] = "live";
    PolicyApprovalStatus["processing"] = "processing";
})(PolicyApprovalStatus || (exports.PolicyApprovalStatus = PolicyApprovalStatus = {}));
var TransactionDirection;
(function (TransactionDirection) {
    TransactionDirection["inbound"] = "INBOUND";
    TransactionDirection["outbound"] = "OUTBOUND";
})(TransactionDirection || (exports.TransactionDirection = TransactionDirection = {}));
var ScreeningTransactionStatus;
(function (ScreeningTransactionStatus) {
    ScreeningTransactionStatus["completed"] = "COMPLETED";
    ScreeningTransactionStatus["pending"] = "PENDING";
    ScreeningTransactionStatus["rejected"] = "REJECTED";
    ScreeningTransactionStatus["failed"] = "FAILED";
    ScreeningTransactionStatus["canceled"] = "CANCELED";
    ScreeningTransactionStatus["blockingTimeExpired"] = "BLOCKING_TIME_EXPIRED";
})(ScreeningTransactionStatus || (exports.ScreeningTransactionStatus = ScreeningTransactionStatus = {}));
var ScreeningVerdict;
(function (ScreeningVerdict) {
    ScreeningVerdict["accept"] = "ACCEPT";
    ScreeningVerdict["reject"] = "REJECT";
    ScreeningVerdict["alert"] = "ALERT";
    ScreeningVerdict["wait"] = "WAIT";
    ScreeningVerdict["freeze"] = "FREEZE";
    ScreeningVerdict["cancel"] = "CANCEL";
})(ScreeningVerdict || (exports.ScreeningVerdict = ScreeningVerdict = {}));
var ScreeningSupportedProviders;
(function (ScreeningSupportedProviders) {
    ScreeningSupportedProviders["CHAINALYSIS"] = "CHAINALYSIS";
    ScreeningSupportedProviders["ELLIPTIC"] = "ELLIPTIC";
    ScreeningSupportedProviders["CHAINALYSIS_V2"] = "CHAINALYSIS_V2";
    ScreeningSupportedProviders["ELLIPTIC_HOLISTIC"] = "ELLIPTIC_HOLISTIC";
})(ScreeningSupportedProviders || (exports.ScreeningSupportedProviders = ScreeningSupportedProviders = {}));
var Web3ConnectionFeeLevel;
(function (Web3ConnectionFeeLevel) {
    Web3ConnectionFeeLevel["HIGH"] = "HIGH";
    Web3ConnectionFeeLevel["MEDIUM"] = "MEDIUM";
})(Web3ConnectionFeeLevel || (exports.Web3ConnectionFeeLevel = Web3ConnectionFeeLevel = {}));
var FeeLevel;
(function (FeeLevel) {
    FeeLevel["HIGH"] = "HIGH";
    FeeLevel["MEDIUM"] = "MEDIUM";
    FeeLevel["LOW"] = "LOW";
})(FeeLevel || (exports.FeeLevel = FeeLevel = {}));
var NetworkScheme;
(function (NetworkScheme) {
    NetworkScheme["DEFAULT"] = "DEFAULT";
    NetworkScheme["CUSTOM"] = "CUSTOM";
    NetworkScheme["NONE"] = "NONE";
})(NetworkScheme || (exports.NetworkScheme = NetworkScheme = {}));
var NetworkDestType;
(function (NetworkDestType) {
    NetworkDestType["VAULT_ACCOUNT"] = "VAULT";
    NetworkDestType["EXCHANGE_ACCOUNT"] = "EXCHANGE";
    NetworkDestType["FIAT_ACCOUNT"] = "FIAT_ACCOUNT";
})(NetworkDestType || (exports.NetworkDestType = NetworkDestType = {}));
var NFTSpamSourceEnum;
(function (NFTSpamSourceEnum) {
    NFTSpamSourceEnum["OWNER"] = "OWNER";
    NFTSpamSourceEnum["SYSTEM"] = "SYSTEM";
})(NFTSpamSourceEnum || (NFTSpamSourceEnum = {}));
var TransactionOrder;
(function (TransactionOrder) {
    TransactionOrder["CREATED_AT"] = "createdAt";
    TransactionOrder["LAST_UPDATED"] = "lastUpdated";
})(TransactionOrder || (exports.TransactionOrder = TransactionOrder = {}));
var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["SUBMITTED"] = "SUBMITTED";
    TransactionStatus["QUEUED"] = "QUEUED";
    TransactionStatus["PENDING_SIGNATURE"] = "PENDING_SIGNATURE";
    TransactionStatus["PENDING_AUTHORIZATION"] = "PENDING_AUTHORIZATION";
    TransactionStatus["PENDING_3RD_PARTY_MANUAL_APPROVAL"] = "PENDING_3RD_PARTY_MANUAL_APPROVAL";
    TransactionStatus["PENDING_3RD_PARTY"] = "PENDING_3RD_PARTY";
    /**
     * @deprecated
     */
    TransactionStatus["PENDING"] = "PENDING";
    TransactionStatus["BROADCASTING"] = "BROADCASTING";
    TransactionStatus["CONFIRMING"] = "CONFIRMING";
    /**
     * @deprecated Replaced by "COMPLETED"
     */
    TransactionStatus["CONFIRMED"] = "CONFIRMED";
    TransactionStatus["COMPLETED"] = "COMPLETED";
    TransactionStatus["PENDING_AML_SCREENING"] = "PENDING_AML_SCREENING";
    TransactionStatus["PARTIALLY_COMPLETED"] = "PARTIALLY_COMPLETED";
    TransactionStatus["CANCELLING"] = "CANCELLING";
    TransactionStatus["CANCELLED"] = "CANCELLED";
    TransactionStatus["REJECTED"] = "REJECTED";
    TransactionStatus["FAILED"] = "FAILED";
    TransactionStatus["TIMEOUT"] = "TIMEOUT";
    TransactionStatus["BLOCKED"] = "BLOCKED";
})(TransactionStatus || (exports.TransactionStatus = TransactionStatus = {}));
var PeerType;
(function (PeerType) {
    PeerType["VAULT_ACCOUNT"] = "VAULT_ACCOUNT";
    PeerType["EXCHANGE_ACCOUNT"] = "EXCHANGE_ACCOUNT";
    PeerType["INTERNAL_WALLET"] = "INTERNAL_WALLET";
    PeerType["EXTERNAL_WALLET"] = "EXTERNAL_WALLET";
    PeerType["CONTRACT"] = "CONTRACT";
    PeerType["UNKNOWN"] = "UNKNOWN";
    PeerType["NETWORK_CONNECTION"] = "NETWORK_CONNECTION";
    PeerType["FIAT_ACCOUNT"] = "FIAT_ACCOUNT";
    PeerType["COMPOUND"] = "COMPOUND";
    PeerType["ONE_TIME_ADDRESS"] = "ONE_TIME_ADDRESS";
    PeerType["OEC_PARTNER"] = "OEC_PARTNER";
    PeerType["END_USER_WALLET"] = "END_USER_WALLET";
})(PeerType || (exports.PeerType = PeerType = {}));
var VirtualType;
(function (VirtualType) {
    VirtualType["OFF_EXCHANGE"] = "OFF_EXCHANGE";
    VirtualType["DEFAULT"] = "DEFAULT";
    VirtualType["OEC_FEE_BANK"] = "OEC_FEE_BANK";
})(VirtualType || (exports.VirtualType = VirtualType = {}));
var TransactionOperation;
(function (TransactionOperation) {
    TransactionOperation["TRANSFER"] = "TRANSFER";
    TransactionOperation["MINT"] = "MINT";
    TransactionOperation["BURN"] = "BURN";
    TransactionOperation["SUPPLY_TO_COMPOUND"] = "SUPPLY_TO_COMPOUND";
    TransactionOperation["REDEEM_FROM_COMPOUND"] = "REDEEM_FROM_COMPOUND";
    TransactionOperation["RAW"] = "RAW";
    TransactionOperation["CONTRACT_CALL"] = "CONTRACT_CALL";
    TransactionOperation["TYPED_MESSAGE"] = "TYPED_MESSAGE";
})(TransactionOperation || (exports.TransactionOperation = TransactionOperation = {}));
var Web3ConnectionType;
(function (Web3ConnectionType) {
    Web3ConnectionType["WALLET_CONNECT"] = "WalletConnect";
})(Web3ConnectionType || (exports.Web3ConnectionType = Web3ConnectionType = {}));
var Web3ConnectionMethod;
(function (Web3ConnectionMethod) {
    Web3ConnectionMethod["MOBILE"] = "MOBILE";
    Web3ConnectionMethod["DESKTOP"] = "DESKTOP";
    Web3ConnectionMethod["API"] = "API";
})(Web3ConnectionMethod || (exports.Web3ConnectionMethod = Web3ConnectionMethod = {}));
var TransferTicketStatus;
(function (TransferTicketStatus) {
    TransferTicketStatus["OPEN"] = "OPEN";
    TransferTicketStatus["PARTIALLY_FULFILLED"] = "PARTIALLY_FULFILLED";
    TransferTicketStatus["FULFILLED"] = "FULFILLED";
    TransferTicketStatus["FAILED"] = "FAILED";
    TransferTicketStatus["CANCELED"] = "CANCELED";
})(TransferTicketStatus || (exports.TransferTicketStatus = TransferTicketStatus = {}));
var TransferTicketTermStatus;
(function (TransferTicketTermStatus) {
    TransferTicketTermStatus["OPEN"] = "OPEN";
    TransferTicketTermStatus["FULFILLED"] = "FULFILLED";
})(TransferTicketTermStatus || (exports.TransferTicketTermStatus = TransferTicketTermStatus = {}));
var AssetPriceSource;
(function (AssetPriceSource) {
    AssetPriceSource["PUBLIC"] = "PUBLIC";
    AssetPriceSource["PRIVATE"] = "PRIVATE";
})(AssetPriceSource || (AssetPriceSource = {}));
var SettleResponseCode;
(function (SettleResponseCode) {
    SettleResponseCode[SettleResponseCode["NONE"] = 0] = "NONE";
    SettleResponseCode[SettleResponseCode["NOTHING_TO_SETTLE"] = 1] = "NOTHING_TO_SETTLE";
})(SettleResponseCode || (exports.SettleResponseCode = SettleResponseCode = {}));
var InitiatorType;
(function (InitiatorType) {
    InitiatorType["EXCHANGE"] = "EXCHANGE";
    InitiatorType["TRADER"] = "TRADER";
})(InitiatorType || (InitiatorType = {}));
var ExchangeReply;
(function (ExchangeReply) {
    ExchangeReply["REJECTED"] = "REJECTED";
    ExchangeReply["NOT_NEEDED"] = "NOT_NEEDED";
    ExchangeReply["FAILED"] = "FAILED";
})(ExchangeReply || (exports.ExchangeReply = ExchangeReply = {}));
var TimePeriod;
(function (TimePeriod) {
    TimePeriod["DAY"] = "DAY";
    TimePeriod["WEEK"] = "WEEK";
})(TimePeriod || (exports.TimePeriod = TimePeriod = {}));
var GetNFTsSortValues;
(function (GetNFTsSortValues) {
    GetNFTsSortValues["collectionName"] = "collection.name";
    GetNFTsSortValues["name"] = "name";
    GetNFTsSortValues["blockchainDescriptor"] = "blockchainDescriptor";
})(GetNFTsSortValues || (exports.GetNFTsSortValues = GetNFTsSortValues = {}));
var GetOwnedNFTsSortValues;
(function (GetOwnedNFTsSortValues) {
    GetOwnedNFTsSortValues["ownershipLastUpdateTime"] = "ownershipLastUpdateTime";
    GetOwnedNFTsSortValues["name"] = "name";
    GetOwnedNFTsSortValues["collectionName"] = "collection.name";
    GetOwnedNFTsSortValues["blockchainDescriptor"] = "blockchainDescriptor";
})(GetOwnedNFTsSortValues || (exports.GetOwnedNFTsSortValues = GetOwnedNFTsSortValues = {}));
var GetOwnedCollectionsSortValues;
(function (GetOwnedCollectionsSortValues) {
    GetOwnedCollectionsSortValues["name"] = "name";
})(GetOwnedCollectionsSortValues || (exports.GetOwnedCollectionsSortValues = GetOwnedCollectionsSortValues = {}));
var GetOwnedAssetsSortValues;
(function (GetOwnedAssetsSortValues) {
    GetOwnedAssetsSortValues["name"] = "name";
})(GetOwnedAssetsSortValues || (exports.GetOwnedAssetsSortValues = GetOwnedAssetsSortValues = {}));
var OrderValues;
(function (OrderValues) {
    OrderValues["ASC"] = "ASC";
    OrderValues["DESC"] = "DESC";
})(OrderValues || (exports.OrderValues = OrderValues = {}));
var NFTOwnershipStatus;
(function (NFTOwnershipStatus) {
    NFTOwnershipStatus["LISTED"] = "LISTED";
    NFTOwnershipStatus["ARCHIVED"] = "ARCHIVED";
})(NFTOwnershipStatus || (exports.NFTOwnershipStatus = NFTOwnershipStatus = {}));
var NFTOwnershipWalletType;
(function (NFTOwnershipWalletType) {
    NFTOwnershipWalletType["VAULT_ACCOUNT"] = "VAULT_ACCOUNT";
    NFTOwnershipWalletType["END_USER_WALLET"] = "END_USER_WALLET";
})(NFTOwnershipWalletType || (exports.NFTOwnershipWalletType = NFTOwnershipWalletType = {}));
var ContractTemplateType;
(function (ContractTemplateType) {
    ContractTemplateType["FUNGIBLE_TOKEN"] = "FUNGIBLE_TOKEN";
    ContractTemplateType["NON_FUNGIBLE_TOKEN"] = "NON_FUNGIBLE_TOKEN";
    ContractTemplateType["NON_TOKEN"] = "NON_TOKEN";
    ContractTemplateType["UUPS_PROXY"] = "UUPS_PROXY";
})(ContractTemplateType || (exports.ContractTemplateType = ContractTemplateType = {}));
var ContractInitializationPhase;
(function (ContractInitializationPhase) {
    ContractInitializationPhase["ON_DEPLOYMENT"] = "ON_DEPLOYMENT";
    ContractInitializationPhase["POST_DEPLOYMENT"] = "POST_DEPLOYMENT";
})(ContractInitializationPhase || (exports.ContractInitializationPhase = ContractInitializationPhase = {}));
var InputFieldMetadataTypes;
(function (InputFieldMetadataTypes) {
    InputFieldMetadataTypes["EncodedFunctionCallFieldType"] = "encodedFunctionCall";
    InputFieldMetadataTypes["DeployedContractAddressFieldType"] = "deployedContractAddress";
    InputFieldMetadataTypes["SupportedAssetAddressFieldType"] = "supportedAssetAddress";
})(InputFieldMetadataTypes || (exports.InputFieldMetadataTypes = InputFieldMetadataTypes = {}));
var NFTSpamTokenOwnership;
(function (NFTSpamTokenOwnership) {
    NFTSpamTokenOwnership["true"] = "true";
    NFTSpamTokenOwnership["false"] = "false";
    NFTSpamTokenOwnership["all"] = "all";
})(NFTSpamTokenOwnership || (exports.NFTSpamTokenOwnership = NFTSpamTokenOwnership = {}));
var TokenLinkStatus;
(function (TokenLinkStatus) {
    TokenLinkStatus["PENDING"] = "PENDING";
    TokenLinkStatus["COMPLETED"] = "COMPLETED";
})(TokenLinkStatus || (exports.TokenLinkStatus = TokenLinkStatus = {}));
var CollectionType;
(function (CollectionType) {
    CollectionType["NON_FUNGIBLE_TOKEN"] = "NON_FUNGIBLE_TOKEN";
    CollectionType["SEMI_FUNGIBLE_TOKEN"] = "SEMI_FUNGIBLE_TOKEN";
})(CollectionType || (exports.CollectionType = CollectionType = {}));
var BatchStatus;
(function (BatchStatus) {
    BatchStatus["CREATED"] = "CREATED";
    BatchStatus["IN_PROGRESS"] = "INPROGRESS";
    BatchStatus["DONE"] = "DONE";
    BatchStatus["ERROR"] = "ERROR";
    BatchStatus["CANCELED"] = "CANCELED";
    BatchStatus["PAUSED"] = "PAUSED";
})(BatchStatus || (exports.BatchStatus = BatchStatus = {}));
class BatchJob {
}
exports.BatchJob = BatchJob;
class BatchTask {
}
exports.BatchTask = BatchTask;
var SmartTransfersTicketDirection;
(function (SmartTransfersTicketDirection) {
    SmartTransfersTicketDirection["EXCHANGE"] = "EXCHANGE";
    SmartTransfersTicketDirection["SEND"] = "SEND";
    SmartTransfersTicketDirection["RECEIVE"] = "RECEIVE";
    SmartTransfersTicketDirection["INTERMEDIATE"] = "INTERMEDIATE";
})(SmartTransfersTicketDirection || (exports.SmartTransfersTicketDirection = SmartTransfersTicketDirection = {}));
var SmartTransfersTicketStatus;
(function (SmartTransfersTicketStatus) {
    SmartTransfersTicketStatus["DRAFT"] = "DRAFT";
    SmartTransfersTicketStatus["PENDING_APPROVAL"] = "PENDING_APPROVAL";
    SmartTransfersTicketStatus["OPEN"] = "OPEN";
    SmartTransfersTicketStatus["IN_SETTLEMENT"] = "IN_SETTLEMENT";
    SmartTransfersTicketStatus["FULFILLED"] = "FULFILLED";
    SmartTransfersTicketStatus["EXPIRED"] = "EXPIRED";
    SmartTransfersTicketStatus["CANCELED"] = "CANCELED";
})(SmartTransfersTicketStatus || (exports.SmartTransfersTicketStatus = SmartTransfersTicketStatus = {}));
var SmartTransferTicketTermStatus;
(function (SmartTransferTicketTermStatus) {
    SmartTransferTicketTermStatus["CREATED"] = "CREATED";
    SmartTransferTicketTermStatus["FUNDING"] = "FUNDING";
    SmartTransferTicketTermStatus["FUNDING_FAILED"] = "FUNDING_FAILED";
    SmartTransferTicketTermStatus["FUNDED"] = "FUNDED";
    SmartTransferTicketTermStatus["REJECTED"] = "REJECTED";
})(SmartTransferTicketTermStatus || (exports.SmartTransferTicketTermStatus = SmartTransferTicketTermStatus = {}));
var NCW;
(function (NCW) {
    NCW.WalletIdHeader = "X-End-User-Wallet-Id";
    class LatestBackupKey {
    }
    NCW.LatestBackupKey = LatestBackupKey;
    class LatestBackupResponse {
    }
    NCW.LatestBackupResponse = LatestBackupResponse;
    let SetupStatus;
    (function (SetupStatus) {
        SetupStatus["COMPLETE"] = "COMPLETE";
        SetupStatus["INCOMPLETE"] = "INCOMPLETE";
    })(SetupStatus = NCW.SetupStatus || (NCW.SetupStatus = {}));
    class KeySetup {
    }
    NCW.KeySetup = KeySetup;
    class DeviceKeySetupResponse {
    }
    NCW.DeviceKeySetupResponse = DeviceKeySetupResponse;
    class WalletSetupStatusResponse {
    }
    NCW.WalletSetupStatusResponse = WalletSetupStatusResponse;
})(NCW || (exports.NCW = NCW = {}));
var TAP;
(function (TAP) {
    let PolicyStatus;
    (function (PolicyStatus) {
        PolicyStatus["SUCCESS"] = "SUCCESS";
        PolicyStatus["UNVALIDATED"] = "UNVALIDATED";
        PolicyStatus["INVALID_CONFIGURATION"] = "INVALID_CONFIGURATION";
        PolicyStatus["PENDING"] = "PENDING";
        PolicyStatus["PENDING_CONSOLE_APPROVAL"] = "PENDING_CONSOLE_APPROVAL";
        PolicyStatus["AWAITING_QUORUM"] = "AWAITING_QUORUM";
        PolicyStatus["UNHANDLED_ERROR"] = "UNHANDLED_ERROR";
    })(PolicyStatus || (PolicyStatus = {}));
})(TAP || (exports.TAP = TAP = {}));
//# sourceMappingURL=types.js.map